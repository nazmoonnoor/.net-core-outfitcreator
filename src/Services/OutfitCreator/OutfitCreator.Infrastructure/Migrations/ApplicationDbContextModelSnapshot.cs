// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OutfitCreator.Infrastructure;

namespace OutfitCreator.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            CountryCode = "DE",
                            CountryName = "Germany",
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 628, DateTimeKind.Utc).AddTicks(5846)
                        },
                        new
                        {
                            Id = new Guid("86fe60fa-06e5-440d-8656-e8abcb56736e"),
                            CountryCode = "FR",
                            CountryName = "France",
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 628, DateTimeKind.Utc).AddTicks(6381)
                        },
                        new
                        {
                            Id = new Guid("e77dde38-15a3-4c2a-a66c-6bf063a22d3f"),
                            CountryCode = "UK",
                            CountryName = "United Kingdom",
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 628, DateTimeKind.Utc).AddTicks(6385)
                        },
                        new
                        {
                            Id = new Guid("e9132ddd-f121-47ec-8f6f-c92826c2b89b"),
                            CountryCode = "NL",
                            CountryName = "Netherlands",
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 628, DateTimeKind.Utc).AddTicks(6387)
                        },
                        new
                        {
                            Id = new Guid("34c0435a-1473-4a3a-b2bb-3aebcd26b960"),
                            CountryCode = "NO",
                            CountryName = "Norway",
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 628, DateTimeKind.Utc).AddTicks(6389)
                        });
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("ProductGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProductImageId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProductTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProductGroupId");

                    b.HasIndex("ProductImageId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2fe22a1-fbe9-412a-b841-8c8d1debbcc5"),
                            Code = "06.04.101.1636",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(4975),
                            Description = "nunc viverra dapibus nulla",
                            Gender = 1,
                            IsAvailable = true,
                            Price = 33.45f,
                            ProductGroupId = new Guid("67de6eba-2097-41b4-9d1b-f9d9aa4ff3c4"),
                            ProductImageId = new Guid("6431e8e8-8644-4d70-bdcd-d61316da4494"),
                            ProductTypeId = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3")
                        },
                        new
                        {
                            Id = new Guid("8b164803-8ab7-4dff-87af-01fbe9814dbd"),
                            Code = "06.04.101.1636",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6071),
                            Description = "Tunc viverra dapibus nulla",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 32.45f,
                            ProductGroupId = new Guid("67de6eba-2097-41b4-9d1b-f9d9aa4ff3c4"),
                            ProductImageId = new Guid("6431e8e8-8644-4d70-bdcd-d61316da4494"),
                            ProductTypeId = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3")
                        },
                        new
                        {
                            Id = new Guid("550051aa-6774-4035-ae1c-c4ed0986b687"),
                            Code = "03.04.101.1635",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6081),
                            Description = "volutpat convallis morbi odio",
                            Gender = 1,
                            IsAvailable = true,
                            Price = 23.45f,
                            ProductGroupId = new Guid("0e19d44e-217a-403a-88a5-349e6a7713a7"),
                            ProductImageId = new Guid("6431e8e8-8644-4d70-bdcd-d61316da4494"),
                            ProductTypeId = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3")
                        },
                        new
                        {
                            Id = new Guid("c664f7f4-baff-4dd1-98c9-1f75194d99e6"),
                            Code = "01.04.101.1233",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6097),
                            Description = "platea dictumst aliquam augue quam",
                            Gender = 1,
                            IsAvailable = true,
                            Price = 12.45f,
                            ProductGroupId = new Guid("67de6eba-2097-41b4-9d1b-f9d9aa4ff3c4"),
                            ProductImageId = new Guid("6431e8e8-8644-4d70-bdcd-d61316da4494"),
                            ProductTypeId = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3")
                        },
                        new
                        {
                            Id = new Guid("43c76c3d-f9f6-4495-ba43-630293e19632"),
                            Code = "19.04.101.1621",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6104),
                            Description = "at vulputate vitae nisl",
                            Gender = 1,
                            IsAvailable = true,
                            Price = 43.45f,
                            ProductGroupId = new Guid("0e19d44e-217a-403a-88a5-349e6a7713a7"),
                            ProductImageId = new Guid("72b0b605-e3e0-41ad-8cb5-1ea7ea72bbb4"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("b1300036-5526-468f-8b41-058e061dca9e"),
                            Code = "08.08.101.1639",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6110),
                            Description = "habitasse platea dictumst etiam",
                            Gender = 1,
                            IsAvailable = true,
                            Price = 39.45f,
                            ProductGroupId = new Guid("9a545b7a-bd39-45e8-980e-14e9b51189c6"),
                            ProductImageId = new Guid("c66d5f67-5f60-48d5-8d9d-9379fbb43460"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("ad2e0506-5767-44f3-836f-708b434cf4a9"),
                            Code = "07.04.101.1566",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6116),
                            Description = "quis justo maecenas rhoncus",
                            Gender = 1,
                            IsAvailable = true,
                            Price = 51.45f,
                            ProductGroupId = new Guid("9a545b7a-bd39-45e8-980e-14e9b51189c6"),
                            ProductImageId = new Guid("d7d2e620-8dd8-4f28-a569-48c2130dd70c"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("f231250d-cb81-46f0-b165-45a73bf3986c"),
                            Code = "07.04.151.1652",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6123),
                            Description = "phasellus in felis donec",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 11.45f,
                            ProductGroupId = new Guid("6f9e028c-e2d4-487a-9404-8abe0cd7b9b0"),
                            ProductImageId = new Guid("af3a007b-8722-4f8c-bb4f-dfdc4e75671c"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("c27cab00-0a99-4499-9f46-75fc790a5d26"),
                            Code = "78.04.101.1854",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6936),
                            Description = "odio odio elementum eu",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 21.45f,
                            ProductGroupId = new Guid("6f9e028c-e2d4-487a-9404-8abe0cd7b9b0"),
                            ProductImageId = new Guid("fa5267c1-d527-4a21-9647-df5bb088716a"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("8d908fff-bb3e-4409-9d34-0c273dbba978"),
                            Code = "66.04.101.8536",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6944),
                            Description = "lobortis est phasellus sit amet",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 51.45f,
                            ProductGroupId = new Guid("37423833-1ff7-407f-ac86-efbfc0bae2ab"),
                            ProductImageId = new Guid("1d18b480-765a-401f-8be7-0222e36f908e"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("ee48ebde-5d1b-4f96-9ef7-7e3cb3d18198"),
                            Code = "12.04.101.1786",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6949),
                            Description = "quam pede lobortis ligula sit",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 22.45f,
                            ProductGroupId = new Guid("37423833-1ff7-407f-ac86-efbfc0bae2ab"),
                            ProductImageId = new Guid("f408ad8c-1740-439c-a61b-a2d5acd30022"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("f27e1dcd-769e-415d-8394-920ccea16d23"),
                            Code = "46.04.101.4566",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6959),
                            Description = "erat tortor sollicitudin mi sit",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 11.45f,
                            ProductGroupId = new Guid("21cdad5e-56fb-4fcf-84bb-4c9d53fd4b46"),
                            ProductImageId = new Guid("3ea4bd58-1e8b-4a51-817a-c1e1455110ae"),
                            ProductTypeId = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4")
                        },
                        new
                        {
                            Id = new Guid("cbfd579d-67fb-4ea4-831c-50e904f4f7ac"),
                            Code = "88.04.551.5536",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6965),
                            Description = "sed sagittis nam congue risus",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 14.45f,
                            ProductGroupId = new Guid("21cdad5e-56fb-4fcf-84bb-4c9d53fd4b46"),
                            ProductImageId = new Guid("c7bff360-14d7-490e-b6e4-a3a81eccd334"),
                            ProductTypeId = new Guid("dce52991-2683-4ad6-ae5c-43a5b556d0f5")
                        },
                        new
                        {
                            Id = new Guid("afb7c30a-3ac7-44ad-adad-986961a3795d"),
                            Code = "32.04.101.1242",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6970),
                            Description = "vel pede morbi porttitor lorem",
                            Gender = 1,
                            IsAvailable = true,
                            Price = 32.45f,
                            ProductGroupId = new Guid("adfa898e-c67a-4a49-a154-bab1bc250d03"),
                            ProductImageId = new Guid("31327a0b-14ec-4966-85dd-ee6650cc4569"),
                            ProductTypeId = new Guid("dce52991-2683-4ad6-ae5c-43a5b556d0f5")
                        },
                        new
                        {
                            Id = new Guid("677f22be-84c8-4b82-b5cb-97b2d76e386d"),
                            Code = "64.04.151.1434",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6976),
                            Description = "nascetur ridiculus mus vivamus vestibulum",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 31.45f,
                            ProductGroupId = new Guid("adfa898e-c67a-4a49-a154-bab1bc250d03"),
                            ProductImageId = new Guid("825d73b2-d986-49ac-8a51-4bb8d71ca6ce"),
                            ProductTypeId = new Guid("dce52991-2683-4ad6-ae5c-43a5b556d0f5")
                        },
                        new
                        {
                            Id = new Guid("97c75f22-307f-459a-b2ae-86f1ce87a817"),
                            Code = "34.04.101.4242",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6981),
                            Description = "adipiscing elit proin risus praesent",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 67.45f,
                            ProductGroupId = new Guid("c7035d03-111c-4071-a27a-64bbabc53d32"),
                            ProductImageId = new Guid("bbed4ad2-dd5e-459a-933f-b09e3c5e662a"),
                            ProductTypeId = new Guid("dce52991-2683-4ad6-ae5c-43a5b556d0f5")
                        },
                        new
                        {
                            Id = new Guid("16adccd6-0667-4fbe-a478-27c0cf541363"),
                            Code = "52.04.122.8536",
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(6987),
                            Description = "aenean sit amet justo morbi",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 56.45f,
                            ProductGroupId = new Guid("c7035d03-111c-4071-a27a-64bbabc53d32"),
                            ProductImageId = new Guid("03e4522c-f894-4f2f-b6be-8049c5961a35"),
                            ProductTypeId = new Guid("dce52991-2683-4ad6-ae5c-43a5b556d0f5")
                        },
                        new
                        {
                            Id = new Guid("4eb05499-7eb0-4302-8f6a-eca03a071788"),
                            Code = "15.04.101.1543",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(7682),
                            Description = "orci luctus et ultrices posuere",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 22.45f,
                            ProductGroupId = new Guid("09f0a1bd-77d9-4c76-a915-a49b93aefcbc"),
                            ProductImageId = new Guid("383bce15-be2a-4a40-b288-5e67bd05d359"),
                            ProductTypeId = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3")
                        },
                        new
                        {
                            Id = new Guid("a046d3f9-c358-4a14-9047-2e70c1deceb1"),
                            Code = "52.04.101.4535",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(7688),
                            Description = "facilisi cras non velit nec",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 21.45f,
                            ProductGroupId = new Guid("09f0a1bd-77d9-4c76-a915-a49b93aefcbc"),
                            ProductImageId = new Guid("535154ee-66f8-49fc-9d5b-c4f7c3146b29"),
                            ProductTypeId = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3")
                        },
                        new
                        {
                            Id = new Guid("48fcae22-2b4e-4e06-8095-77c8c37b67de"),
                            Code = "42.04.551.2556",
                            CountryId = new Guid("caebd473-c4b6-4a3d-8e24-ff4769c8af6a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 633, DateTimeKind.Utc).AddTicks(7697),
                            Description = "at diam nam tristique",
                            Gender = 2,
                            IsAvailable = true,
                            Price = 11.45f,
                            ProductGroupId = new Guid("2a13b6aa-7fd4-4db9-a022-515938ab9071"),
                            ProductImageId = new Guid("d17e519c-99cb-4862-bdcf-3fe92cb457fa"),
                            ProductTypeId = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3")
                        });
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.ProductGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("WebCategory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd698e16-dcc1-4891-b863-74904446e0d7"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(257),
                            WebCategory = "Accessories"
                        },
                        new
                        {
                            Id = new Guid("cfc310f3-a8da-4f32-972a-6f12bf84199e"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(271),
                            WebCategory = "Blouses"
                        },
                        new
                        {
                            Id = new Guid("abb4ee60-2f39-4c07-a0fb-3c156f2159dd"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(274),
                            WebCategory = "Sweatshirts"
                        },
                        new
                        {
                            Id = new Guid("a3c7bfdb-23fc-487a-93a7-91f64f49c77c"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(276),
                            WebCategory = "Pants"
                        },
                        new
                        {
                            Id = new Guid("1cdd9999-0963-49ef-98c4-93d21a3b9d38"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(278),
                            WebCategory = "Denim"
                        },
                        new
                        {
                            Id = new Guid("67de6eba-2097-41b4-9d1b-f9d9aa4ff3c4"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(281),
                            WebCategory = "WCA01156"
                        },
                        new
                        {
                            Id = new Guid("0e19d44e-217a-403a-88a5-349e6a7713a7"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(283),
                            WebCategory = "WCA01159"
                        },
                        new
                        {
                            Id = new Guid("9a545b7a-bd39-45e8-980e-14e9b51189c6"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(285),
                            WebCategory = "WCA01155"
                        },
                        new
                        {
                            Id = new Guid("060a878b-078d-479e-9d91-6d73b5c6d18b"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(288),
                            WebCategory = "WCA01152"
                        },
                        new
                        {
                            Id = new Guid("e688b9fe-0247-4167-90c1-ae5bbbbe2d9c"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(290),
                            WebCategory = "WCA01158"
                        },
                        new
                        {
                            Id = new Guid("f71a9dbd-8bfd-46a8-9316-1825f9684070"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(292),
                            WebCategory = "WCA01153"
                        },
                        new
                        {
                            Id = new Guid("6f9e028c-e2d4-487a-9404-8abe0cd7b9b0"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(294),
                            WebCategory = "WCA00122"
                        },
                        new
                        {
                            Id = new Guid("37423833-1ff7-407f-ac86-efbfc0bae2ab"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(296),
                            WebCategory = "WCA00121"
                        },
                        new
                        {
                            Id = new Guid("21cdad5e-56fb-4fcf-84bb-4c9d53fd4b46"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(338),
                            WebCategory = "WCA00132"
                        },
                        new
                        {
                            Id = new Guid("adfa898e-c67a-4a49-a154-bab1bc250d03"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(340),
                            WebCategory = "WCA00131"
                        },
                        new
                        {
                            Id = new Guid("c7035d03-111c-4071-a27a-64bbabc53d32"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(342),
                            WebCategory = "WCA00172"
                        },
                        new
                        {
                            Id = new Guid("b32ed022-7194-4381-b9c4-609a0f202477"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(344),
                            WebCategory = "WCA00173"
                        },
                        new
                        {
                            Id = new Guid("09f0a1bd-77d9-4c76-a915-a49b93aefcbc"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(347),
                            WebCategory = "WCA02246"
                        },
                        new
                        {
                            Id = new Guid("2a13b6aa-7fd4-4db9-a022-515938ab9071"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(349),
                            WebCategory = "WCA02242"
                        },
                        new
                        {
                            Id = new Guid("bcbd6491-3eeb-4069-be99-869600137c6c"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(351),
                            WebCategory = "WCA02241"
                        },
                        new
                        {
                            Id = new Guid("cd6017a8-33eb-421a-a642-e769d70ecf9f"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 635, DateTimeKind.Utc).AddTicks(353),
                            WebCategory = "WCA02243"
                        });
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Frame")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Resolution")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6431e8e8-8644-4d70-bdcd-d61316da4494"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2774),
                            Frame = "1_1",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "low"
                        },
                        new
                        {
                            Id = new Guid("d17e519c-99cb-4862-bdcf-3fe92cb457fa"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2788),
                            Frame = "1_1",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "low"
                        },
                        new
                        {
                            Id = new Guid("535154ee-66f8-49fc-9d5b-c4f7c3146b29"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2791),
                            Frame = "1_1",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "low"
                        },
                        new
                        {
                            Id = new Guid("383bce15-be2a-4a40-b288-5e67bd05d359"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2794),
                            Frame = "2_3",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "mid"
                        },
                        new
                        {
                            Id = new Guid("03e4522c-f894-4f2f-b6be-8049c5961a35"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2796),
                            Frame = "2_3",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "mid"
                        },
                        new
                        {
                            Id = new Guid("bbed4ad2-dd5e-459a-933f-b09e3c5e662a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2799),
                            Frame = "2_3",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "mid"
                        },
                        new
                        {
                            Id = new Guid("825d73b2-d986-49ac-8a51-4bb8d71ca6ce"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2801),
                            Frame = "2_3",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "high"
                        },
                        new
                        {
                            Id = new Guid("31327a0b-14ec-4966-85dd-ee6650cc4569"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2803),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "high"
                        },
                        new
                        {
                            Id = new Guid("c7bff360-14d7-490e-b6e4-a3a81eccd334"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2806),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "high"
                        },
                        new
                        {
                            Id = new Guid("3ea4bd58-1e8b-4a51-817a-c1e1455110ae"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2808),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "high"
                        },
                        new
                        {
                            Id = new Guid("f408ad8c-1740-439c-a61b-a2d5acd30022"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2811),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "higher"
                        },
                        new
                        {
                            Id = new Guid("1d18b480-765a-401f-8be7-0222e36f908e"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2814),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "higher"
                        },
                        new
                        {
                            Id = new Guid("fa5267c1-d527-4a21-9647-df5bb088716a"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2858),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "higher"
                        },
                        new
                        {
                            Id = new Guid("af3a007b-8722-4f8c-bb4f-dfdc4e75671c"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2860),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "higher"
                        },
                        new
                        {
                            Id = new Guid("d7d2e620-8dd8-4f28-a569-48c2130dd70c"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2863),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "higher"
                        },
                        new
                        {
                            Id = new Guid("c66d5f67-5f60-48d5-8d9d-9379fbb43460"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2865),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "higher"
                        },
                        new
                        {
                            Id = new Guid("72b0b605-e3e0-41ad-8cb5-1ea7ea72bbb4"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(2867),
                            Frame = "9_16",
                            ImageUrl = ".\\public\\images\\random_image.jpg",
                            Resolution = "higher"
                        });
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8528a09-c88f-4b09-b150-5437b2a66ac3"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(8577),
                            TypeName = "Outerwear"
                        },
                        new
                        {
                            Id = new Guid("47861db8-56d6-4b79-9ff9-90e7d01c77f4"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(8584),
                            TypeName = "Underwear"
                        },
                        new
                        {
                            Id = new Guid("dce52991-2683-4ad6-ae5c-43a5b556d0f5"),
                            Created = new DateTime(2022, 3, 21, 10, 51, 44, 636, DateTimeKind.Utc).AddTicks(8586),
                            TypeName = "Accessories"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.Product", b =>
                {
                    b.HasOne("OutfitCreator.Core.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("OutfitCreator.Core.Domain.ProductGroup", "ProductGroup")
                        .WithMany("Products")
                        .HasForeignKey("ProductGroupId");

                    b.HasOne("OutfitCreator.Core.Domain.ProductImage", "ProductImage")
                        .WithMany("Products")
                        .HasForeignKey("ProductImageId");

                    b.HasOne("OutfitCreator.Core.Domain.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId");

                    b.Navigation("Country");

                    b.Navigation("ProductGroup");

                    b.Navigation("ProductImage");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.ProductGroup", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.ProductImage", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OutfitCreator.Core.Domain.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
